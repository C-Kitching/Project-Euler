# Enter your code here. Read input from STDIN. Print output to STDOUT

# useful resources
# https://en.wikipedia.org/wiki/Ulam_spiral

def spiral_sum(N):
    """Calcualte the sum of diagonals for a square spiral centered on 1 with
    n layers. Note that this is an Ulam spiral so all numbers on a straight 
    line starting at 1 can be generated by a quadratic equation of the form
    4n^2+bn+c, where b and c are numbers which can be determined by setting n
    to 1 and n, and setting the equation to the desired numbers.
    The 4 diagonals have equations
    4n^2+2n+1, 4n^2-2n+1, 4n^2+4n+1 and 4n^2+1.
    Summing terms from n=1 to N and then adding one gives a closed form result

    Args:
        N (int): number of layers of the square spiral

    Returns:
        int: sum of the diagonals of the square spiral modulo 10e9+7
    """

    res = (3+2*N*(13+N*(15+8*N)))//3
    return res % (10**9+7)

# read each test case
for _ in range(int(input())): 

    # convert square length to the number of the squares
    # i.e inner square is 1, next square is 2 etc.
    N = int(input())//2

    # calculate and print spiral number
    print(spiral_sum(N))
